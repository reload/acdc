on: push
name: Run tests

jobs:
  spec_tests:
    name: "Spec tests"
    runs-on: ubuntu-latest
    if: '!github.event.deleted'
    steps:
    - name: 'Checkout code'
      uses: actions/checkout@master
    - name: Setup PHP, with composer and extensions
      uses: shivammathur/setup-php@master
      with:
        php-version: 7.2
        # We're using phpdbg, we don't need a coverage extension.
        coverage: none
    - name: Install Dependencies
      run: |
        composer install --no-interaction --no-progress
    - name: 'Run spec tests'
      env:
        APP_KEY: "base64:Z++HhObkg1plehwZlK6RGSRVi4uWPiUGRYFoDOt2/Ig="
        DB_CONNECTION: "sqlite"
        DB_DATABASE: "/tmp/acdc.sqlite"
        LOG_CHANNEL: "errorlog"
        APP_ENV: "testing"
      run: |
        phpdbg -qrr vendor/bin/phpspec run
    - name: 'Merge coverage'
      run: |
        phpdbg -qrr vendor/bin/phpcov merge --clover=spec.xml coverage/spec.cov
    - name: 'Upload CodeCov report'
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        bash <(curl -s https://codecov.io/bash) -F spec -f spec.xml -Z

  unit_tests:
    name: "Unit tests"
    runs-on: ubuntu-latest
    if: '!github.event.deleted'
    steps:
    - name: 'Checkout code'
      uses: actions/checkout@master
    - name: Setup PHP, with composer and extensions
      uses: shivammathur/setup-php@master
      with:
        php-version: 7.2
        # We're using phpdbg, we don't need a coverage extension.
        coverage: none
    - name: Install Dependencies
      run: |
        composer install --no-interaction --no-progress
    - name: 'Run unit tests'
      run: |
        phpdbg -qrr vendor/bin/phpunit --testsuite Unit --coverage-php=coverage/unit.cov
    - name: 'Merge coverage'
      run: |
        phpdbg -qrr vendor/bin/phpcov merge --clover=unit.xml coverage/unit.cov
    - name: 'Upload CodeCov report'
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        bash <(curl -s https://codecov.io/bash) -F unit -f unit.xml -Z

  feature_tests:
    name: "Feature tests"
    runs-on: ubuntu-latest
    if: '!github.event.deleted'
    steps:
    - name: 'Checkout code'
      uses: actions/checkout@master
    - name: Setup PHP, with composer and extensions
      uses: shivammathur/setup-php@master
      with:
        php-version: 7.2
        # We're using phpdbg, we don't need a coverage extension.
        coverage: none
    - name: Install Dependencies
      run: |
        composer install --no-interaction --no-progress
    - name: 'Run unit tests'
      env:
        APP_KEY: "base64:Z++HhObkg1plehwZlK6RGSRVi4uWPiUGRYFoDOt2/Ig="
        DB_CONNECTION: "sqlite"
        DB_DATABASE: "/tmp/acdc.sqlite"
        LOG_CHANNEL: "errorlog"
        APP_ENV: "testing"
      run: |
        phpdbg -qrr vendor/bin/phpunit --testsuite Feature --coverage-php=coverage/feature.cov
    - name: 'Merge coverage'
      run: |
        phpdbg -qrr vendor/bin/phpcov merge --clover=feature.xml coverage/feature.cov
    - name: 'Upload CodeCov report'
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        bash <(curl -s https://codecov.io/bash) -F feature -f feature.xml -Z

  build:
    name: Docker build and push
    if: '!github.event.deleted'
    runs-on: ubuntu-latest
    needs: [spec_tests, unit_tests, feature_tests]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: Bump version and push tag
      if: github.ref == 'refs/heads/master'
      uses: anothrNick/github-tag-action@master
      id: version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: false
        DEFAULT_BUMP: patch
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master
    - name: Login to GitHub Container Registry
      if: github.ref == 'refs/heads/master'
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        # Currently ghcr.io only supports a personal access token, so
        # this is one from reload-deploy.
        password: ${{ secrets.GHCR_TOKEN }}
    - name: Build and push Docker images
      if: github.ref == 'refs/heads/master'
      uses: docker/build-push-action@v2
      with:
        builder: ${{ steps.buildx.outputs.name }}
        tags: |
          ghcr.io/reload/acdc:latest
          ghcr.io/reload/acdc:${{ steps.version.outputs.new_tag }}
        push: true
